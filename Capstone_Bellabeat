Bellabeat
Chiuhing Casey
2023-07-10

Link:https://rpubs.com/ChiuhingCasey/1061523

How Can a Wellness Technology Company Plays it Smart?
Bellabeat
Introduction:
This Capstone Project is part of the Google Data Analytics Certification requirements. Bellabeat is a small & successful manufacturer of smart wearable devices for women. Leadership and marketing teams are researching on improving their marketing strategy in the fitness trackers market.
Company products:
•	Bellabeat app – Bellabeat app provides users with their health data related to their activity, sleep, stress, menstrual cycle, and mindfulness habits. This data can help users better understand their current habits and make healthy decisions. This app connects to Bellabeat’s line of smart wellness products.
•	Leaf – Bellabeat’s classic wellness tracker can be worn as a bracelet, necklace, or clip. This tracker connects to the Bellabeat app to track activity, sleep, and stress.
•	Time – This wellness watch combines the classic timepiece with smart technology to tract users’ activity, sleep, and stress. This watch connects to Bellabeat app to provide user with insights into their daily wellness.
•	Spring – This is a water bottle that tracks daily water intake using smart technology to ensure that users are appropriately hydrated throughout the day. The Spring bottle connects to the Bellabeat app to track user’s hydration levels.
•	Bellabeat membership – Bellabeat also offers a subscription-based membership program for users. Membership gives users 24/7 access to fully personalized guidance on nutrition, activity, sleep, health and beauty, and mindfulness based on their lifestyle and goals.
Goals:
Smart devices provide users the benefits of monitoring health & wellness related topics. These records include daily activities & intensities, calories burning numbers, heartbeat rates, and sleeping patterns. Bellabeat may utilize the insights of the smart device users’ daily habit for expanding Bellabeat’s marketing strategy in promoting the benefits of using Bellabeat’s products.
To answer the following questions:
•	What are trends in smart device usage?
•	How could these trends apply to Bellabeat customers?
•	How could these trends help influence Bellabeat marketing strategy?
Stakeholders:
•	Urska Srsen – Bellabeat’s cofounder and Chief Creative Officer.
•	Sando Mur – Mathematician and Bellabeat’s cofounder. Key member of the executive team.
•	Marketing Analytics Team – A team of data analysts responsible for collecting and reporting data that helps guide Bellabeat’s marketing strategy.
Prepare
Srsen encourages to use the public data to explore the smart device users’ daily habit. She points out a specific data set - FitBit Fitness Tracker Data. This public Kaggle data set contains personal fitness tracker from 30 Fitbit users from 2016-03-12 to 2016-05-12.
data_location
Upload the data files from Kaggle to RStudio
Creditability of the dataset:
This dataset generated by respondents to a distributed survey via Amazon Mechanical Turk between 03.12.2016-05.12.2016. 30 eligible Fitbit users consented to the submission of personal tracker data, including minute-level output for physical activity, heart rate, and sleep monitoring.
•	DailyAcitivities_merged.csv
•	WeightLogInfo_merged.csv
•	sleepData_merged.csv
Install and load the required packages in RStudio:
install.packages("tidyverse")
## Installing package into '/cloud/lib/x86_64-pc-linux-gnu-library/4.3'
## (as 'lib' is unspecified)
install.packages("ggplot2")
## Installing package into '/cloud/lib/x86_64-pc-linux-gnu-library/4.3'
## (as 'lib' is unspecified)
install.packages("dplyr")
## Installing package into '/cloud/lib/x86_64-pc-linux-gnu-library/4.3'
## (as 'lib' is unspecified)
install.packages("tidyr")
## Installing package into '/cloud/lib/x86_64-pc-linux-gnu-library/4.3'
## (as 'lib' is unspecified)
install.packages("janitor")
## Installing package into '/cloud/lib/x86_64-pc-linux-gnu-library/4.3'
## (as 'lib' is unspecified)
library(tidyverse)
## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
## ✔ dplyr     1.1.2     ✔ readr     2.1.4
## ✔ forcats   1.0.0     ✔ stringr   1.5.0
## ✔ ggplot2   3.4.2     ✔ tibble    3.2.1
## ✔ lubridate 1.9.2     ✔ tidyr     1.3.0
## ✔ purrr     1.0.1
## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()
## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
library(ggplot2)
library(dplyr)
library(tidyr)
library(janitor)
## 
## Attaching package: 'janitor'
## 
## The following objects are masked from 'package:stats':
## 
##     chisq.test, fisher.test
Load the 3 data files into the project in RStudio.Version
dailyactivity_df <- read.csv("dailyActivity_merged.csv")
sleepdata_df <- read.csv("sleepDay_merged.csv")
weightinfo_df <- read.csv("weightLogInfo_merged.csv")
Exploring the datasets
summary(dailyactivity_df)
##        Id            ActivityDate         TotalSteps    TotalDistance   
##  Min.   :1.504e+09   Length:940         Min.   :    0   Min.   : 0.000  
##  1st Qu.:2.320e+09   Class :character   1st Qu.: 3790   1st Qu.: 2.620  
##  Median :4.445e+09   Mode  :character   Median : 7406   Median : 5.245  
##  Mean   :4.855e+09                      Mean   : 7638   Mean   : 5.490  
##  3rd Qu.:6.962e+09                      3rd Qu.:10727   3rd Qu.: 7.713  
##  Max.   :8.878e+09                      Max.   :36019   Max.   :28.030  
##  TrackerDistance  LoggedActivitiesDistance VeryActiveDistance
##  Min.   : 0.000   Min.   :0.0000           Min.   : 0.000    
##  1st Qu.: 2.620   1st Qu.:0.0000           1st Qu.: 0.000    
##  Median : 5.245   Median :0.0000           Median : 0.210    
##  Mean   : 5.475   Mean   :0.1082           Mean   : 1.503    
##  3rd Qu.: 7.710   3rd Qu.:0.0000           3rd Qu.: 2.053    
##  Max.   :28.030   Max.   :4.9421           Max.   :21.920    
##  ModeratelyActiveDistance LightActiveDistance SedentaryActiveDistance
##  Min.   :0.0000           Min.   : 0.000      Min.   :0.000000       
##  1st Qu.:0.0000           1st Qu.: 1.945      1st Qu.:0.000000       
##  Median :0.2400           Median : 3.365      Median :0.000000       
##  Mean   :0.5675           Mean   : 3.341      Mean   :0.001606       
##  3rd Qu.:0.8000           3rd Qu.: 4.782      3rd Qu.:0.000000       
##  Max.   :6.4800           Max.   :10.710      Max.   :0.110000       
##  VeryActiveMinutes FairlyActiveMinutes LightlyActiveMinutes SedentaryMinutes
##  Min.   :  0.00    Min.   :  0.00      Min.   :  0.0        Min.   :   0.0  
##  1st Qu.:  0.00    1st Qu.:  0.00      1st Qu.:127.0        1st Qu.: 729.8  
##  Median :  4.00    Median :  6.00      Median :199.0        Median :1057.5  
##  Mean   : 21.16    Mean   : 13.56      Mean   :192.8        Mean   : 991.2  
##  3rd Qu.: 32.00    3rd Qu.: 19.00      3rd Qu.:264.0        3rd Qu.:1229.5  
##  Max.   :210.00    Max.   :143.00      Max.   :518.0        Max.   :1440.0  
##     Calories   
##  Min.   :   0  
##  1st Qu.:1828  
##  Median :2134  
##  Mean   :2304  
##  3rd Qu.:2793  
##  Max.   :4900
str(dailyactivity_df)
## 'data.frame':    940 obs. of  15 variables:
##  $ Id                      : num  1.5e+09 1.5e+09 1.5e+09 1.5e+09 1.5e+09 ...
##  $ ActivityDate            : chr  "4/12/2016" "4/13/2016" "4/14/2016" "4/15/2016" ...
##  $ TotalSteps              : int  13162 10735 10460 9762 12669 9705 13019 15506 10544 9819 ...
##  $ TotalDistance           : num  8.5 6.97 6.74 6.28 8.16 ...
##  $ TrackerDistance         : num  8.5 6.97 6.74 6.28 8.16 ...
##  $ LoggedActivitiesDistance: num  0 0 0 0 0 0 0 0 0 0 ...
##  $ VeryActiveDistance      : num  1.88 1.57 2.44 2.14 2.71 ...
##  $ ModeratelyActiveDistance: num  0.55 0.69 0.4 1.26 0.41 ...
##  $ LightActiveDistance     : num  6.06 4.71 3.91 2.83 5.04 ...
##  $ SedentaryActiveDistance : num  0 0 0 0 0 0 0 0 0 0 ...
##  $ VeryActiveMinutes       : int  25 21 30 29 36 38 42 50 28 19 ...
##  $ FairlyActiveMinutes     : int  13 19 11 34 10 20 16 31 12 8 ...
##  $ LightlyActiveMinutes    : int  328 217 181 209 221 164 233 264 205 211 ...
##  $ SedentaryMinutes        : int  728 776 1218 726 773 539 1149 775 818 838 ...
##  $ Calories                : int  1985 1797 1776 1745 1863 1728 1921 2035 1786 1775 ...
n_distinct(dailyactivity_df$Id)
## [1] 33
Summary of Sleep information
summary(sleepdata_df)
##        Id              SleepDay         TotalSleepRecords TotalMinutesAsleep
##  Min.   :1.504e+09   Length:413         Min.   :1.000     Min.   : 58.0     
##  1st Qu.:3.977e+09   Class :character   1st Qu.:1.000     1st Qu.:361.0     
##  Median :4.703e+09   Mode  :character   Median :1.000     Median :433.0     
##  Mean   :5.001e+09                      Mean   :1.119     Mean   :419.5     
##  3rd Qu.:6.962e+09                      3rd Qu.:1.000     3rd Qu.:490.0     
##  Max.   :8.792e+09                      Max.   :3.000     Max.   :796.0     
##  TotalTimeInBed 
##  Min.   : 61.0  
##  1st Qu.:403.0  
##  Median :463.0  
##  Mean   :458.6  
##  3rd Qu.:526.0  
##  Max.   :961.0
str(sleepdata_df)
## 'data.frame':    413 obs. of  5 variables:
##  $ Id                : num  1.5e+09 1.5e+09 1.5e+09 1.5e+09 1.5e+09 ...
##  $ SleepDay          : chr  "4/12/2016 12:00:00 AM" "4/13/2016 12:00:00 AM" "4/15/2016 12:00:00 AM" "4/16/2016 12:00:00 AM" ...
##  $ TotalSleepRecords : int  1 2 1 2 1 1 1 1 1 1 ...
##  $ TotalMinutesAsleep: int  327 384 412 340 700 304 360 325 361 430 ...
##  $ TotalTimeInBed    : int  346 407 442 367 712 320 377 364 384 449 ...
n_distinct(sleepdata_df$Id)
## [1] 24
summary of Weight information
summary(weightinfo_df)
##        Id                Date              WeightKg       WeightPounds  
##  Min.   :1.504e+09   Length:67          Min.   : 52.60   Min.   :116.0  
##  1st Qu.:6.962e+09   Class :character   1st Qu.: 61.40   1st Qu.:135.4  
##  Median :6.962e+09   Mode  :character   Median : 62.50   Median :137.8  
##  Mean   :7.009e+09                      Mean   : 72.04   Mean   :158.8  
##  3rd Qu.:8.878e+09                      3rd Qu.: 85.05   3rd Qu.:187.5  
##  Max.   :8.878e+09                      Max.   :133.50   Max.   :294.3  
##                                                                         
##       Fat             BMI        IsManualReport         LogId          
##  Min.   :22.00   Min.   :21.45   Length:67          Min.   :1.460e+12  
##  1st Qu.:22.75   1st Qu.:23.96   Class :character   1st Qu.:1.461e+12  
##  Median :23.50   Median :24.39   Mode  :character   Median :1.462e+12  
##  Mean   :23.50   Mean   :25.19                      Mean   :1.462e+12  
##  3rd Qu.:24.25   3rd Qu.:25.56                      3rd Qu.:1.462e+12  
##  Max.   :25.00   Max.   :47.54                      Max.   :1.463e+12  
##  NA's   :65
str(weightinfo_df)
## 'data.frame':    67 obs. of  8 variables:
##  $ Id            : num  1.50e+09 1.50e+09 1.93e+09 2.87e+09 2.87e+09 ...
##  $ Date          : chr  "5/2/2016 11:59:59 PM" "5/3/2016 11:59:59 PM" "4/13/2016 1:08:52 AM" "4/21/2016 11:59:59 PM" ...
##  $ WeightKg      : num  52.6 52.6 133.5 56.7 57.3 ...
##  $ WeightPounds  : num  116 116 294 125 126 ...
##  $ Fat           : int  22 NA NA NA NA 25 NA NA NA NA ...
##  $ BMI           : num  22.6 22.6 47.5 21.5 21.7 ...
##  $ IsManualReport: chr  "True" "True" "False" "True" ...
##  $ LogId         : num  1.46e+12 1.46e+12 1.46e+12 1.46e+12 1.46e+12 ...
n_distinct(weightinfo_df$Id)
## [1] 8
Data Cleaning:
Change all heading labels into lower case
clean_daily <- dailyactivity_df %>% clean_names()
clean_sleep <- sleepdata_df %>% clean_names()
clean_weight <- weightinfo_df %>% clean_names()
Separate - Date & time in data frames
clean_sleep & clean_weight
create clean_sleep2 & clean_weight2
clean_sleep2 <- separate(clean_sleep, col=sleep_day, into = c("date", "time"), sep=" ")
## Warning: Expected 2 pieces. Additional pieces discarded in 413 rows [1, 2, 3, 4, 5, 6,
## 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].
clean_weight2 <- separate(clean_weight, col=date, into = c("date", "time"), sep=" ")
## Warning: Expected 2 pieces. Additional pieces discarded in 67 rows [1, 2, 3, 4, 5, 6, 7,
## 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].
Data Analysis Session
Source of Healthy steps for adults
More_Information
create new analysis variables –
total_active_minutes = very_active_minutes + fairly_active_minutes + lightly_active_minutes
clean_dailyactivity_new <- clean_daily %>% 
  mutate(total_active_minutes = very_active_minutes+fairly_active_minutes+lightly_active_minutes)
glimpse(clean_dailyactivity_new)
## Rows: 940
## Columns: 16
## $ id                         <dbl> 1503960366, 1503960366, 1503960366, 1503960…
## $ activity_date              <chr> "4/12/2016", "4/13/2016", "4/14/2016", "4/1…
## $ total_steps                <int> 13162, 10735, 10460, 9762, 12669, 9705, 130…
## $ total_distance             <dbl> 8.50, 6.97, 6.74, 6.28, 8.16, 6.48, 8.59, 9…
## $ tracker_distance           <dbl> 8.50, 6.97, 6.74, 6.28, 8.16, 6.48, 8.59, 9…
## $ logged_activities_distance <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…
## $ very_active_distance       <dbl> 1.88, 1.57, 2.44, 2.14, 2.71, 3.19, 3.25, 3…
## $ moderately_active_distance <dbl> 0.55, 0.69, 0.40, 1.26, 0.41, 0.78, 0.64, 1…
## $ light_active_distance      <dbl> 6.06, 4.71, 3.91, 2.83, 5.04, 2.51, 4.71, 5…
## $ sedentary_active_distance  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…
## $ very_active_minutes        <int> 25, 21, 30, 29, 36, 38, 42, 50, 28, 19, 66,…
## $ fairly_active_minutes      <int> 13, 19, 11, 34, 10, 20, 16, 31, 12, 8, 27, …
## $ lightly_active_minutes     <int> 328, 217, 181, 209, 221, 164, 233, 264, 205…
## $ sedentary_minutes          <int> 728, 776, 1218, 726, 773, 539, 1149, 775, 8…
## $ calories                   <int> 1985, 1797, 1776, 1745, 1863, 1728, 1921, 2…
## $ total_active_minutes       <int> 366, 257, 222, 272, 267, 222, 291, 345, 245…
Identify activity levels by steps count:
•	sedentary is less than 5000 steps
•	lightly_active is between 5000 - 8000 steps
•	fairly_active is between 8000 to 10000 steps
•	very_active is great than 10000 steps
activitylevels <- clean_dailyactivity_new %>% 
group_by(id) %>% 
  summarise(avg_step= mean(total_steps)) %>% 
  mutate (active_level = case_when (
          avg_step <5000 ~ "d – less than 5000 steps",
          avg_step >=5000 & avg_step < 8000 ~"c - 5k – 8k steps",
          avg_step >=8000 & avg_step < 10000 ~"b - 8k – 10k steps",
          avg_step >=10000 ~'a - above 10k steps'))
activitylevels
## # A tibble: 33 × 3
##            id avg_step active_level            
##         <dbl>    <dbl> <chr>                   
##  1 1503960366   12117. a - above 10k steps     
##  2 1624580081    5744. c - 5k – 8k steps       
##  3 1644430081    7283. c - 5k – 8k steps       
##  4 1844505072    2580. d – less than 5000 steps
##  5 1927972279     916. d – less than 5000 steps
##  6 2022484408   11371. a - above 10k steps     
##  7 2026352035    5567. c - 5k – 8k steps       
##  8 2320127002    4717. d – less than 5000 steps
##  9 2347167796    9520. b - 8k – 10k steps      
## 10 2873212765    7556. c - 5k – 8k steps       
## # ℹ 23 more rows
Healthy sleep levels for adults is between 7 - 9 hours or 420 - 540 minutes each night
CDC_sleep_info
Identify healthy sleep levels:
•	unhealthy_sleep is less than 5 hours or 300 minutes
•	average_sleep is between 5 - 8 hours or 300 - 480 minutes
•	healthy_sleep is more than 8 hours or 480 minutes
sleeplevels <- clean_sleep2 %>%  
     group_by(id) %>% 
     summarise(avg_time_asleep = mean(total_minutes_asleep)) %>% 
     mutate(sleep_type = case_when(
            avg_time_asleep < 300 ~ "c - unhealthy sleep < 300 mins.",
            avg_time_asleep >=300 & avg_time_asleep <= 480 ~ "b - average sleep 300 – 480 min",
            avg_time_asleep > 480 ~ "a -healthy sleep above 480 min"))
sleeplevels
## # A tibble: 24 × 3
##            id avg_time_asleep sleep_type                     
##         <dbl>           <dbl> <chr>                          
##  1 1503960366            360. b - average sleep 300 – 480 min
##  2 1644430081            294  c - unhealthy sleep < 300 mins.
##  3 1844505072            652  a -healthy sleep above 480 min 
##  4 1927972279            417  b - average sleep 300 – 480 min
##  5 2026352035            506. a -healthy sleep above 480 min 
##  6 2320127002             61  c - unhealthy sleep < 300 mins.
##  7 2347167796            447. b - average sleep 300 – 480 min
##  8 3977333714            294. c - unhealthy sleep < 300 mins.
##  9 4020332650            349. b - average sleep 300 – 480 min
## 10 4319703577            477. b - average sleep 300 – 480 min
## # ℹ 14 more rows
merge 2 datasets - dailyactivities & sleep information with user’s ‘id’ & ‘date’
clean_activity_n_sleep <- merge(clean_dailyactivity_new, clean_sleep2, 
                               by.x = c("id", "activity_date" ),
                               by.y = c("id", "date"))
str(clean_activity_n_sleep)
## 'data.frame':    413 obs. of  20 variables:
##  $ id                        : num  1.5e+09 1.5e+09 1.5e+09 1.5e+09 1.5e+09 ...
##  $ activity_date             : chr  "4/12/2016" "4/13/2016" "4/15/2016" "4/16/2016" ...
##  $ total_steps               : int  13162 10735 9762 12669 9705 15506 10544 9819 14371 10039 ...
##  $ total_distance            : num  8.5 6.97 6.28 8.16 6.48 ...
##  $ tracker_distance          : num  8.5 6.97 6.28 8.16 6.48 ...
##  $ logged_activities_distance: num  0 0 0 0 0 0 0 0 0 0 ...
##  $ very_active_distance      : num  1.88 1.57 2.14 2.71 3.19 ...
##  $ moderately_active_distance: num  0.55 0.69 1.26 0.41 0.78 ...
##  $ light_active_distance     : num  6.06 4.71 2.83 5.04 2.51 ...
##  $ sedentary_active_distance : num  0 0 0 0 0 0 0 0 0 0 ...
##  $ very_active_minutes       : int  25 21 29 36 38 50 28 19 41 39 ...
##  $ fairly_active_minutes     : int  13 19 34 10 20 31 12 8 21 5 ...
##  $ lightly_active_minutes    : int  328 217 209 221 164 264 205 211 262 238 ...
##  $ sedentary_minutes         : int  728 776 726 773 539 775 818 838 732 709 ...
##  $ calories                  : int  1985 1797 1745 1863 1728 2035 1786 1775 1949 1788 ...
##  $ total_active_minutes      : int  366 257 272 267 222 345 245 238 324 282 ...
##  $ time                      : chr  "12:00:00" "12:00:00" "12:00:00" "12:00:00" ...
##  $ total_sleep_records       : int  1 2 1 2 1 1 1 1 1 1 ...
##  $ total_minutes_asleep      : int  327 384 412 340 700 304 360 325 361 430 ...
##  $ total_time_in_bed         : int  346 407 442 367 712 320 377 364 384 449 ...
Healthy BMI levels for adults
CDC_BMI_info
•	underweight is below 18.5
•	healthy range is 18.5 - 24.9
•	over weight is 25 - 29.9
•	obesity is 30 - 39.9
bmilevels <- clean_weight2 %>%  
  group_by(id) %>% 
  summarise(avg_bmi = mean(bmi)) %>% 
  mutate(type=case_when (
  avg_bmi < 18.5 ~ "a – unweight < 18.5",
  avg_bmi >=18.5 & avg_bmi < 24.9 ~ "b - healthy range 18.5 – 24.9",
  avg_bmi >=24.9 & avg_bmi < 29.9 ~ "c - over weight 24.9 – 29.9",
  avg_bmi > 29.9 ~ "d – obesity above 29.9"))
bmilevels
## # A tibble: 8 × 3
##           id avg_bmi type                         
##        <dbl>   <dbl> <chr>                        
## 1 1503960366    22.6 b - healthy range 18.5 – 24.9
## 2 1927972279    47.5 d – obesity above 29.9       
## 3 2873212765    21.6 b - healthy range 18.5 – 24.9
## 4 4319703577    27.4 c - over weight 24.9 – 29.9  
## 5 4558609924    27.2 c - over weight 24.9 – 29.9  
## 6 5577150313    28   c - over weight 24.9 – 29.9  
## 7 6962181067    24.0 b - healthy range 18.5 – 24.9
## 8 8877689391    25.5 c - over weight 24.9 – 29.9
Data Visualization
Objective What is the relationship between calories burned and number of steps taken of the day?
calories_steps <- ggplot(data=clean_daily, aes(x=total_steps, y=calories))+ geom_point(color="green")+ geom_smooth()+labs(title = "Calories Burned vs Total Daily Steps",x="Total Steps", y="Calories Burned")
calories_steps
## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'
 
Findings There is a positive correlations between number of steps taken and number of calories burned, more steps are taken, more calories would be burned.
Objective: What is the relationship between daily steps and minutes asleep?
sleep_activity <- ggplot(data=clean_activity_n_sleep, aes(x=total_steps, y=total_minutes_asleep))+ geom_point(color="turquoise")+ geom_smooth()+labs(title = "Total Daily Steps vs Total Daily Sleeping minutes",x="Total Steps", y="Minutes Asleep")
sleep_activity
## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'
 
Findings There is a neutral correlations between Daily number of steps taken with Daily asleep minutes.
Objective: What is the relationship between daily calories burned and minutes asleep?
sleep_calories <- ggplot(data=clean_activity_n_sleep, aes(x=calories, y=total_minutes_asleep))  + 
  geom_point(color="salmon") + 
  geom_smooth() +
  labs(title = "Total Daily Calories Burned vs Total Daily Sleeping minutes",x="Calories Burned", y="Minutes Asleep")
sleep_calories
## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'
 
Findings There is a minor positive correlations between total calories burned with asleep minutes.
Objective: What is the relationship between calories burned and the activity minutes?
active_calories<-ggplot(clean_dailyactivity_new, aes(x = total_active_minutes, y = calories))+
  geom_point(color="turquoise")+
  geom_smooth()+
  labs(title="Daily Activite Minutes vs Calories Burned", x= "Active Minutes", y="Calories Burned")
active_calories
## `geom_smooth()` using method = 'loess' and formula = 'y ~ x'
 
Findings: This is a positive correlation between Active Minutes and Calories burned, more active minutes, more calories burned
Objective: Identify users’ activity level
activitytype <-  ggplot(data = activitylevels) + 
  geom_bar(mapping=aes(x=active_level, fill=active_level)) +
  theme(axis.text.x = element_text(angle = 45)) +
  labs(title = "Activity levels")
activitytype
 
Findings: On daily average, over 75% of users are taking between 5000 to 8000 steps daily.
Objective: What are the users’ sleeping patterns?
sleeptypes <- ggplot(data=sleeplevels) + 
              geom_bar(mapping =aes(x=sleep_type , fill=sleep_type)) +
              theme(axis.text.x = element_text(angle = 45)) +
              labs(title = "Sleeping minutes",x="Types")
sleeptypes
 
Findings: On average, most users sleep between 6 - 8 hours each night.
Objectieve: What are the FitBit users’ BMI levels?
bmitypes <- ggplot(data = bmilevels) + 
  geom_bar(mapping = aes(x=type, fill=type)) + 
  theme(axis.text.x = element_text(angle = 45)) +
  labs(title = "BMI Levels", x = "BMI type")
bmitypes
 
Findings: About 50% of the Fitbit users are in the “Overweight” category.
Sharing
Company’s missions:
~Bellabeat empowers women to reconnect with themselves, unleash their inner strengths and be what they were meant to be~
~Our focus is giving women the tools to live in harmony with themselves~
Conclusion
~Notes of credibility from the data:~
•	The above study is based on 30 FiBit users bweteen the period from 2016-03-12 to 2016-05-12. This sample is relatively small in comparing to the estimated of over 23 millions of smart device users in 2016.
•	The Daily Activity data were from 33 different user ID’s instead of 30. There may be 3 users have multiple IDs.
•	The Sleep information data were submitted from 24 unique users instead of 30.
•	The weight data were from 8 users. It may indicated that women are not comfortable to share their weight or BMI information.
From the above analysis, most FitBit users are health conscious. Over 75% of them are from “highly active” to “fairly active” categories with healthy sleeping period of 6 to 8 hours daily sleep, but majority of them are in the overweight category.
Suggestions:
Initiate users to establish their SMART personal health goals.
•	S – specific
•	M – measurable
•	A – achievable
•	R – relevant
•	T – time-bound
The devices can monitor their goal progress. Connecting with the users periodically, send cheers/congratulations to the achievers, or encouraging/concerning messages to those are behind on their goals. It may be a coaching opportunity for new business.
o~~~ End of Analysis ~~~o

